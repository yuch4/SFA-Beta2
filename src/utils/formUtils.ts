import { Quote, QuoteItem } from '../types/quote';

export const initializeQuoteForm = (quote?: Quote): Partial<Quote> => ({
  quote_date: quote?.quote_date || new Date().toISOString().split('T')[0],
  valid_until: quote?.valid_until || new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
  delivery_date: quote?.delivery_date || '',
  payment_terms: quote?.payment_terms || '',
  subtotal: quote?.subtotal || 0,
  tax_amount: quote?.tax_amount || 0,
  total_amount: quote?.total_amount || 0,
  purchase_cost: quote?.purchase_cost || 0,
  profit_amount: quote?.profit_amount || 0,
  profit_rate: quote?.profit_rate || 0,
  subject: quote?.subject || '',
  message: quote?.message || '',
  notes: quote?.notes || '',
  internal_memo: quote?.internal_memo || '',
  status: quote?.status || 'DRAFT',
  version: quote?.version || 1,
  is_active: quote?.is_active ?? true,
  is_deleted: quote?.is_deleted ?? false,
  case_id: quote?.case_id || '',
  customer_id: quote?.customer_id || '',
});

export const initializeQuoteItem = (order: number): QuoteItem => ({
  id: crypto.randomUUID(),
  quote_id: '',
  item_order: order,
  item_type: 'NORMAL',
  item_name: '',
  quantity: 1,
  unit: '',
  unit_price: 0,
  purchase_unit_price: 0,
  amount: 0,
  is_tax_applicable: true,
  created_at: new Date().toISOString(),
  updated_at: new Date().toISOString(),
  created_by: '',
  updated_by: '',
  is_active: true,
  is_deleted: false,
});